{
  "hash": "2515bd1c741b65c8357a2473f3e99475",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Cleaning data\n---\n\n::: {.callout-tip}\n#### Learning objectives\n\n- \n:::\n\n\n## Context\nOften data is in a messy state before you can work with it. So, it is useful to know when and how to make changes to your data.\n\n## Section setup {#setup_grouped_operations}\n\n::: {.callout-note collapse=\"true\"}\n## Click to expand\n\n::: {.panel-tabset group=\"language\"}\n## R\n\nWe'll continue this section with the script named `da4-11-cleaning-data.R`. If needed, add the following code to the top of your script and run it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# A collection of R packages designed for data science\nlibrary(tidyverse)\n\nsurveys <- read_csv(\"data/surveys.csv\")\nplot_types <- read_csv(\"data/plots.csv\")\n```\n:::\n\n\n## Python\n\nWe'll continue this section with the script named `da4-11-cleaning-data.py`. If needed, add the following code to the top of your script and run it.\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# A Python data analysis and manipulation tool\nimport pandas as pd\n\n# Python equivalent of `ggplot2`\nfrom plotnine import *\n\nsurveys = pd.read_csv(\"data/surveys.csv\")\nplot_types = pd.read_csv(\"data/plots.csv\")\n```\n:::\n\n\n:::\n:::\n\n## Cleaning data\n\n### Changing `plot_id`\n\nIn the example above we saw that it wasn't great practice to just use numbers to indicate `plot_id`, since they obviously have no numerical value.\n\nIt would be better to encode them in the format `plot_xxx` where `xxx` is a number with leading zeros (so that it sorts nicely).\n\nWe can do that as follows:\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_types |> \n  mutate(plot_id = paste0(\"plot_\", sprintf(\"%03d\", plot_id)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 2\n   plot_id  plot_type                \n   <chr>    <chr>                    \n 1 plot_001 Spectab exclosure        \n 2 plot_002 Control                  \n 3 plot_003 Long-term Krat Exclosure \n 4 plot_004 Control                  \n 5 plot_005 Rodent Exclosure         \n 6 plot_006 Short-term Krat Exclosure\n 7 plot_007 Rodent Exclosure         \n 8 plot_008 Control                  \n 9 plot_009 Spectab exclosure        \n10 plot_010 Rodent Exclosure         \n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n\n## Python\n\n:::\n\nNote: this means that you would also have to change the `plot_id` column values in the `surveys` data set, if you wanted to combine the data from these tables!\n\n\n### Variable naming\nLO: variable naming (janitor package)\n\n### Encoding issues\nLO: encoding issues\n\n### Missing data\nLO: dealing with missing data\n\n\n## Summary\n\n::: {.callout-tip}\n#### Key points\n\n- \n:::\n",
    "supporting": [
      "da4-11-cleaning-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}